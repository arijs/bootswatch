// Quartz 5.2.1
// Bootswatch
@use "sass:color";
@use "sass:selector";

// Variables

$body-bg-image: linear-gradient(90deg, shade-color($cyan, 10%), shade-color($purple, 10%), shade-color($pink, 5%)) !default;
$frosted-opacity: .3 !default;
$button-opacity: .3 !default;
$table-opacity: .65 !default;
$alert-opacity: .65 !default;
$card-opacity: .65 !default;

:root {
  color-scheme: light;
}

// Mixins

@mixin glass($opacity: $frosted-opacity, $bg: $white, $opacity2: $opacity - .1, $withShadow: true, $noBorder: true, $bg2: $bg) {
  @if ($noBorder) {
    border: none;
  }
  @if ($withShadow) {
    box-shadow: inset 1px 1px $border-color, inset -1px -1px rgba($white, .1), $box-shadow;
  } @else {
    box-shadow: none;
  }
  @include frost($opacity, $bg, $opacity2, $bg2);

  a {
    color: $card-color;
  }

  .text-muted {
    color: rgba($card-color, .7) !important;
  }
}

@mixin frost($opacity: $frosted-opacity, $bg: $white, $opacity2: $opacity - .1, $bg2: $bg) {
  background-color: transparent;
  background-image: linear-gradient(125deg, rgba($bg, ($opacity)), rgba($bg2, ($opacity2)) 70%);
  backdrop-filter: blur(5px);
}

// Body

body {
  background-image: $body-bg-image;
}

// Tables

.table-secondary {
  --bs-table-hover-color: $white;
}

@each $state, $background in $theme-colors {
  .table-tinted-#{$state} {
    $color: color-contrast(opaque($body-bg, $background));
    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));
    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));
    $active-bg: mix($color, $background, percentage($table-active-bg-factor));
    $table-border-color: mix($color, $background, percentage($table-border-factor));

    @if ($state == secondary or $state == light) {
      $color: $gray-800;
    }
    --#{$prefix}table-color: #{$color};
    --#{$prefix}table-bg: transparent; // #{$background};
    --#{$prefix}table-border-color: transparent; // #{$table-border-color};
    --#{$prefix}table-striped-bg: #{$striped-bg};
    --#{$prefix}table-striped-color: #{color-contrast($striped-bg)};
    --#{$prefix}table-active-bg: #{$active-bg};
    --#{$prefix}table-active-color: #{color-contrast($active-bg)};
    --#{$prefix}table-hover-bg: transparent; // #{$hover-bg};
    --#{$prefix}table-hover-color: #{color-contrast($hover-bg)};

    color: var(--#{$prefix}table-color);
    border-color: var(--#{$prefix}table-border-color);
    @include glass($table-opacity, $background, $table-opacity, false);
    @at-root #{selector.unify(&, "td")}, #{selector.unify(&, "th")}, & > td, & > th, & > tr > td, & > tr > th {
      border: none;
    }
    &:hover {
      @include glass($table-opacity, $hover-bg, $table-opacity, false);
    }
  }
}
.table-tinted-active {
  @extend .table-active;
}

// Buttons

.btn {
  &-secondary {
    color: $white;
    border: none;

    &:hover,
    &:focus {
      color: $white;
    }

    &.disabled {
      color: $white;
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    --#{$prefix}btn-font-weight: 600;
    @include glass($button-opacity, $white, $button-opacity, false, false);
    .btn-check:checked + & {
      background-image: none;
    }
    text-shadow: rgba(color-contrast(mix($value, $white, 50%)), 50%) 0 0 0.25em;
    @if ($color == secondary) {
      --#{$prefix}btn-color: #{color.adjust($value, $alpha: 0.3)};
    }
  }
}

.btn-group > .btn:not(:first-child),
.btn-group > .btn-group:not(:first-child) {
  margin-left: 0;
}

.btn-group-vertical > .btn:not(:first-child),
.btn-group-vertical > .btn-group:not(:first-child) {
  margin-top: 0;
}

.bg-light .btn {
  background-color: rgba($black, .2);
}

// Forms

.input-group-text,
.form-control::file-selector-button {
  background-color: transparent;
  background-image: linear-gradient(125deg, rgba($white, .3), rgba($white, .2) 70%);
  border: none;
  backdrop-filter: blur(5px);
}

.input-group-text {
  box-shadow: inset 1px 1px $border-color, inset -1px -1px rgba($white, .1);
}

.input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
  margin-left: 0;
  border-left: none;
}

.input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),
.input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n + 3) {
  border-right: none;
}

.form-select:not([multiple]) {
  transition: border-color .15s ease-in-out;

  option {
    color: $black;
  }
}

.bg-light .form-control {
  color: $gray-800;
  border-color: rgba($black, .2);

  &::placeholder {
    color: rgba($black, .2);
  }
}

// Navs

.dropdown-menu {
  @include glass(.3);
}

.nav-tabs {
  .nav-link {
    transition: none;

    &:hover,
    &:focus {
      color: $white;
      isolation: auto;
    }

    &,
    &.disabled {
      background-color: $progress-bg;
    }
  }

  .nav-item:first-child > .nav-link {
    border-radius: $border-radius 0 0 $border-radius;
  }

  .nav-item:last-child > .nav-link {
    border-radius: 0 $border-radius $border-radius 0;
  }

  .nav-item .nav-link.active,
  .nav-item.show .nav-link {
    @include glass(1, $white);
    border-radius: $border-radius;
    transform: scale(1.1);

    &:hover,
    &:focus {
      color: $gray-800;
    }
  }

  .dropdown-menu {
    border-radius: $border-radius;
  }
}

.nav-pills {
  .nav-link {
    transition: none;

    &:hover,
    &:focus {
      color: $white;
      isolation: auto;
    }
  }
}

// Indicators

.alert {
  position: relative;
  overflow: hidden;
  color: $white;

  @each $color, $value in $theme-colors {
    $opacity: .7;
    &-#{$color} {
      @include glass($bg: $value, $bg2: $white);
    }
    &-#{$color}::after {
      position: absolute;
      top: 0;
      left: 0;
      width: .5rem;
      height: 100%;
      content: "";
      background-color: $value;
    }
  }
  &.alert-tinted {
    @each $color, $value in $theme-colors {
      &.alert-#{$color} {
        @include glass($alert-opacity, $value, $alert-opacity * 0.5);
        @if ($color == secondary or $color == light) {
          color: $gray-800;
          .alert-link {
            color: $gray-800;
          }
        }
      }
    }
  }

  .alert-link {
    color: $card-color;
  }
}

.badge {
  &.bg-secondary {
    --bs-bg-opacity: .4;
  }

  &.bg-light {
    color: $gray-800;
  }
}

// Containers

.list-group {
  @include glass();
}

.card {
  @include glass();

  @each $color, $value in $theme-colors {
    &.bg-#{$color} {
      @if ($color == secondary) {
        --bs-secondary-rgb: transparent;
        // --bs-bg-opacity: .4;
      } @else {
        background-image: none;
      }
    }
    &.tinted-#{$color} {
      @if ($color == secondary) {
        --bs-secondary-rgb: transparent;
        // --bs-bg-opacity: .4;
      } @else {
        @include glass($card-opacity, $value, $card-opacity * 0.5);
      }
    }
  }

  &.bg-light, &.tinted-light {
    .card-header,
    .card-body {
      color: $gray-800;
    }
  }
  &-header, &-body {
    &.bg-light {
      color: $gray-800;
    }
  }

  &.border {
    @each $color, $value in $theme-colors {
      &-#{$color} {
        @include glass();

        .card-header {
          background-color: $value !important;
          border-bottom: none;

          @if ($color == light) {
            color: $gray-800;
          }
        }
      }
    }
  }

  &-header {
    font-weight: $headings-font-weight;
  }
}

.accordion-item {
  @include glass();
  box-shadow: none;
}

.toast {
  @include glass();
}

.popover {
  @include glass();

  &-header {
    border-bottom-color: $border-color;
  }
}

.tooltip {
  backdrop-filter: blur(5px);
}

.modal-backdrop {
  @include frost($modal-backdrop-filter-opacity, $modal-backdrop-bg, $modal-backdrop-filter-opacity, $modal-backdrop-bg);
}

.modal-content {
  @include glass();
}

.offcanvas {
  @include glass();
}
